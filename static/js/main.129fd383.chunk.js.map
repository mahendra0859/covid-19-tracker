{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","container","card","infected","recovered","deaths","Cards","data","confirmed","lastUpdate","react_default","a","createElement","className","styles","Grid","spacing","justify","item","component","Card","xs","md","cx","CardContent","Typography","color","gutterBottom","varient","build_default","start","end","value","duration","separator","Date","toDateString","url","fetchData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","country","changeableUrl","_yield$axios$get","_yield$axios$get$data","wrap","_context","prev","next","concat","axios","get","sent","abrupt","t0","console","error","stop","_x","apply","this","arguments","fetchDailyData","_ref2","_callee2","_yield$axios$get2","modifiedDate","_context2","map","dailyData","total","date","reportDate","fetchCountries","_ref3","_callee3","_yield$axios$get3","countries","_context3","name","Charts","_useState","useState","_useState2","slicedToArray","setDailyData","useEffect","t1","fetchAPI","lineChart","length","es","labels","datasets","label","borderColor","fail","backgroundColor","log","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountriesAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","React","Component","[object Object]","args","_this","super","state","fetchedData","setState","componentDidMount","_this2","render","_this$state","src","coronaImage","alt","image","Cards_Cards","CountryPicker_CountryPicker","Chart","rootElement","document","getElementById","ReactDOM","StrictMode","src_App","__webpack_require__","p"],"mappings":"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","file":"static/js/main.129fd383.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading ... \";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography varient=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography varient=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography varient=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography varient=\"body2\">\n              Number of recoveries from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography varient=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography varient=\"body2\">\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async country => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedDate = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n    return modifiedDate;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(({ name }) => name);\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { fetchDailyData } from \"../../api\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Charts = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fail: true\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fail: true\n          }\n        ]\n      }}\n    />\n  ) : null;\n  console.log(confirmed, recovered, deaths);\n  const barChart = confirmed && (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"people\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\"\n            ],\n            data: [confirmed.value, recovered.value, deaths.value]\n          }\n        ]\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state is ${country}` }\n      }}\n    />\n  );\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Charts;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchCountriesAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchCountriesAPI();\n  }, [setFetchedCountries]);\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={e => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.length &&\n          fetchedCountries.map((country, i) => (\n            <option value={country} key={i}>\n              {country}\n            </option>\n          ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\n\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api/index\";\nimport coronaImage from \"./images/image.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\"\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n  handleCountryChange = async country => {\n    console.log(\"country\", country);\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country });\n  };\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img src={coronaImage} alt=\"COVID - 19\" className={styles.image} />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}